% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_task_id.R
\name{create_task_id}
\alias{create_task_id}
\title{Create an object of class \code{task_id}}
\usage{
create_task_id(
  name,
  required,
  optional,
  schema_version = getOption("hubAdmin.schema_version", default = "latest"),
  branch = getOption("hubAdmin.branch", default = "main")
)
}
\arguments{
\item{name}{character string, Name of task_id to create.}

\item{required}{Atomic vector of required task_id values. Can be \code{NULL} if all
values are optional.}

\item{optional}{Atomic vector of optional task_id values. Can be \code{NULL} if all
values are required.}

\item{schema_version}{Character string specifying the json schema version to
be used for validation. The default value \code{"latest"} will use the latest version
available in the hubverse
\href{https://github.com/hubverse-org/schemas}{schemas repository}.
Alternatively, a specific version of a schema (e.g. \code{"v0.0.1"})  can be
specified. Can be set through global option "hubAdmin.schema_version".}

\item{branch}{The branch of the hubverse
\href{https://github.com/hubverse-org/schemas}{schemas repository}
from which to fetch schema. Defaults to \code{"main"}. Can be set through global
option "hubAdmin.branch".}
}
\value{
a named list of class \code{task_id} representing a task ID.
}
\description{
Create a representation of a task ID item as a list object of
class \code{task_id}. This can be combined with
additional \code{task_id} objects using function \code{\link[=create_task_ids]{create_task_ids()}} to
create a \code{task_ids} class object for a given model_task.
Such building blocks can ultimately be combined and then written out as or
appended to \code{tasks.json} Hub config files.
}
\details{
\code{required} and \code{optional} vectors for standard task_ids defined in a Hub schema
must match data types and formats specified in the schema. For more details consult
the \href{https://hubverse.io/en/latest/quickstart-hub-admin/tasks-config.html}{documentation on \code{tasks.json} Hub config files}

JSON schema data type names differ to those in R. Use the following mappings to
create vectors of appropriate data types which will correspond to correct JSON
schema data types during config file validation.\tabular{ll}{
   json \tab R \cr
   string \tab character \cr
   boolean \tab logical \cr
   integer \tab integer \cr
   number \tab double \cr
}


Values across \code{required} and \code{optional} arguments must be unique. \code{required}
and \code{optional} must be of the same type (unless \code{NULL}).
Task_ids that represent dates must be supplied as character strings in ISO 8601
date format (YYYY-MM-DD). If working with date objects, please convert to character
(e.g. using \code{as.character()}) before supplying as arguments.

Task_ids not present in the schema are allowed as additional properties but the
user is responsible for providing values of the correct data type.
}
\examples{
create_task_id("horizon", required = 1L, optional = 2:4)
# Set schema version to "v3.0.1" for all subsequent calls
options(hubAdmin.schema_version = "v3.0.1")
create_task_id("horizon", required = 1L, optional = 2:4)
create_task_id("location", required = "US", optional = c("01", "02"))
options(hubAdmin.schema_version = "latest")
}
\seealso{
\code{\link[=create_task_ids]{create_task_ids()}}
}
